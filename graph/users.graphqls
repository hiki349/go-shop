input NewUser {
  username:      String!
  email:         String!
  password:      String!
}

type User {
  id:            UUID!
  username:      String!
  email:         String!
  password:      String!
  created_at:    Time!
  updatet_at:    Time
}

type UsersQuery
type UserMutation

extend type Query {
  users: UsersQuery!
}

extend type Mutation {
  user: UserMutation!
}

extend type UsersQuery {
  get_by_id(id: UUID!): User @goField(forceResolver: true)
  get_all: [User]! @goField(forceResolver: true)
}

extend type UserMutation {
  create(input: NewUser!): User @goField(forceResolver: true)
  update(id: UUID!, input: NewUser!): User @goField(forceResolver: true)
  delete(id: UUID!): Boolean! @goField(forceResolver: true)
}