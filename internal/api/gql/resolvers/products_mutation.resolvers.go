package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.44

import (
	"context"
	"fmt"
	"go-shop/internal/api/gql/model"
	"go-shop/internal/api/gql/runtime"

	"github.com/google/uuid"
)

// Product is the resolver for the product field.
func (r *mutationResolver) Product(ctx context.Context) (*model.ProductsMutation, error) {
	panic(fmt.Errorf("not implemented: Product - product"))
}

// Create is the resolver for the create field.
func (r *productsMutationResolver) Create(ctx context.Context, obj *model.ProductsMutation, input model.ProductInput) (model.ProductsCreateResult, error) {
	panic(fmt.Errorf("not implemented: Create - create"))
}

// Update is the resolver for the update field.
func (r *productsMutationResolver) Update(ctx context.Context, obj *model.ProductsMutation, id uuid.UUID, data model.ProductInput) (model.ProductsUpdateResult, error) {
	panic(fmt.Errorf("not implemented: Update - update"))
}

// Delete is the resolver for the delete field.
func (r *productsMutationResolver) Delete(ctx context.Context, obj *model.ProductsMutation, id uuid.UUID) (model.ProductsDeleteResult, error) {
	panic(fmt.Errorf("not implemented: Delete - delete"))
}

// ProductsMutation returns runtime.ProductsMutationResolver implementation.
func (r *Resolver) ProductsMutation() runtime.ProductsMutationResolver {
	return &productsMutationResolver{r}
}

type productsMutationResolver struct{ *Resolver }
