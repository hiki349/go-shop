type ProductCreate {
  product: Product!
}

type ProductUpdate {
  product: Product!
}

type ProductDelete {
  is_delete: Boolean!
}

union ProductCreateResult =
  | InternalError
  | ProductCreate

union ProductUpdateResult =
  | InternalError
  | NotFound
  | ProductUpdate

union ProductDeleteResult =
  | InternalError
  | NotFound
  | ProductDelete

type ProductMutation

extend type Mutation {
  product: ProductMutation!
}

extend type ProductMutation {
  create(input: NewProduct!): ProductCreateResult! @goField(forceResolver: true)
  update(id: UUID!, input: NewProduct!): ProductUpdateResult! @goField(forceResolver: true)
  delete(id: UUID!): ProductDeleteResult! @goField(forceResolver: true)
}